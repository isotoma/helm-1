{{- if not (eq .Values.global.ingress.class "aws-dual") }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.appName }}-{{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.global.ingress.class }}
{{- if eq .Values.global.ingress.class "alb" }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.global.alb.certificatearn }}
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/scheme: {{ .Values.global.alb.scheme }}
{{- end }}
    {{- if and (.Values.global.alb.oidc.enabled) (eq .Values.global.ingress.class "aws-dual")}}
    alb.ingress.kubernetes.io/auth-type: oidc
    alb.ingress.kubernetes.io/auth-idp-oidc: '{"Issuer": "{{ .Values.global.alb.oidc.issuer }}","AuthorizationEndpoint": "{{ .Values.global.alb.oidc.endpoints.authorize }}","TokenEndpoint": "{{ .Values.global.alb.oidc.endpoints.token }}","UserInfoEndpoint": "{{ .Values.global.alb.oidc.endpoints.userinfo }}","SecretName": "{{ .Values.appName }}-{{ .Release.Namespace }}-alb-oidc"}'
    {{ end }}
  labels:
    environment: {{ .Release.Namespace }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  rules:
    - host: {{ .Values.global.subdomain}}.{{ .Values.global.domain }}
      http:
        paths:
          - backend:
              serviceName: corezoid-web-adm
              servicePort: 80
    - host: superadm-{{ .Values.global.subdomain}}.{{ .Values.global.domain }}
      http:
        paths:
          - backend:
              serviceName: corezoid-web-superadm
              servicePort: 80
    - host: {{ .Values.global.syncapi.subdomain}}.{{ .Values.global.domain }}
      http:
        paths:
          - backend:
              serviceName: syncapi-web
              servicePort: 80
{{- end }}
