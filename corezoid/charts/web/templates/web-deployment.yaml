apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    environment: {{ .Release.Namespace }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  strategy:
    type: RollingUpdate
  replicas: {{ .Values.global.webadm.minReplicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web-configmap-nginx.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/web-configmap-site.yaml") . | sha256sum }}
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        environment: {{ .Release.Namespace }}
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.image.registry }}/{{ .Values.global.repotype }}{{ .Values.image.repository }}:{{ .Values.global.webadm.tag }}
          ports:
          - containerPort: 80
          volumeMounts:
            - name: web-config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: web-config-site
              mountPath: /etc/nginx/conf.d/corezoid.conf
              subPath: corezoid.conf
          resources:
            limits:
              cpu: 200m
              memory: 600Mi
            requests:
              cpu: 50m
              memory: 100Mi
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.4.2
          resources:
            requests:
              cpu: 10m
              memory: 30Mi
          ports:
            - name: nginx-exp-port
              containerPort: 9113
          args:
            - -nginx.scrape-uri=http://localhost/nginx_status
      {{- if not  (eq .Values.global.repotype "public") }}
      imagePullSecrets:
        - name: corezoid-secret
      {{- end }}
      volumes:
        - name: web-config-nginx
          configMap:
            name: {{ .Values.appName }}-main
        - name: web-config-site
          configMap:
            name: {{ .Values.appName }}-site
